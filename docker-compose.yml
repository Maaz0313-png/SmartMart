version: '3.8'

services:
  # Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: smartmart/app
    container_name: smartmart_app
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - smartmart
    depends_on:
      - database
      - redis
      - meilisearch

  # Web Server
  webserver:
    image: nginx:alpine
    container_name: smartmart_webserver
    restart: unless-stopped
    ports:
      - "8000:80"
      - "443:443"
    volumes:
      - ./:/var/www/html
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./docker/ssl:/etc/nginx/ssl
    networks:
      - smartmart
    depends_on:
      - app

  # Database
  database:
    image: mysql:8.0
    container_name: smartmart_database
    restart: unless-stopped
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - smartmart_db_data:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - smartmart

  # Redis
  redis:
    image: redis:7-alpine
    container_name: smartmart_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    volumes:
      - smartmart_redis_data:/data
    networks:
      - smartmart

  # Meilisearch
  meilisearch:
    image: getmeili/meilisearch:v1.5
    container_name: smartmart_meilisearch
    restart: unless-stopped
    ports:
      - "7700:7700"
    environment:
      MEILI_MASTER_KEY: ${MEILISEARCH_KEY}
      MEILI_ENV: development
    volumes:
      - smartmart_meilisearch_data:/meili_data
    networks:
      - smartmart

  # Queue Worker
  queue:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: smartmart_queue
    restart: unless-stopped
    command: php artisan queue:work --verbose --tries=3 --timeout=90
    volumes:
      - ./:/var/www/html
    networks:
      - smartmart
    depends_on:
      - database
      - redis

  # Scheduler
  scheduler:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: smartmart_scheduler
    restart: unless-stopped
    command: php artisan schedule:work
    volumes:
      - ./:/var/www/html
    networks:
      - smartmart
    depends_on:
      - database
      - redis

  # Node.js Development Server (for hot reloading)
  node:
    image: node:20-alpine
    container_name: smartmart_node
    restart: unless-stopped
    working_dir: /var/www/html
    ports:
      - "5173:5173"
    command: npm run dev
    volumes:
      - ./:/var/www/html
      - /var/www/html/node_modules
    networks:
      - smartmart

  # MailHog (for email testing)
  mailhog:
    image: mailhog/mailhog:latest
    container_name: smartmart_mailhog
    restart: unless-stopped
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - smartmart

  # PHPMyAdmin
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: smartmart_phpmyadmin
    restart: unless-stopped
    ports:
      - "8080:80"
    environment:
      PMA_HOST: database
      PMA_PORT: 3306
      PMA_ARBITRARY: 1
    networks:
      - smartmart
    depends_on:
      - database

  # Redis Commander
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: smartmart_redis_commander
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      REDIS_HOSTS: local:redis:6379:0:${REDIS_PASSWORD}
    networks:
      - smartmart
    depends_on:
      - redis

# Docker Networks
networks:
  smartmart:
    driver: bridge

# Volumes
volumes:
  smartmart_db_data:
    driver: local
  smartmart_redis_data:
    driver: local
  smartmart_meilisearch_data:
    driver: local